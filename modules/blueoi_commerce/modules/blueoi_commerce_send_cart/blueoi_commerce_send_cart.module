<?php

/**
 * @file
 * Module file for BlueOI Commerce Send Cart.
 */

define('BLUEOI_COMMERCE_SEND_BASE', 'cart/send');
define('BLUEOI_COMMERCE_RECEIVE_BASE', 'cart/receive');

/**
 * Implements hook_menu().
 */
function blueoi_commerce_send_cart_menu() {
  $items = array();

  $items[BLUEOI_COMMERCE_SEND_BASE . '/%commerce_order'] = array(
    'title' => 'Send Cart',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('blueoi_commerce_send_cart_send_form', 2),
    'access callback' => 'blueoi_commerce_send_cart_send_access',
    'access arguments' => array(2),
  );

  $items[BLUEOI_COMMERCE_RECEIVE_BASE . '/%commerce_order'] = array(
    'title' => 'Receive Cart',
    'page callback' => 'blueoi_commerce_send_cart_receive_callback',
    'page arguments' => array(2),
    'access callback' => 'blueoi_commerce_send_cart_receive_access',
    'access arguments' => array(2),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function blueoi_commerce_send_cart_block_info() {
  $blocks = array();
  $blocks['blueoi_commerce_send_cart_link'] = array(
    'info' => t('Send cart link'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function blueoi_commerce_send_cart_block_view($delta = '') {
  $block = array();
  if ($delta == 'blueoi_commerce_send_cart_link') {
    global $user;
    $order_id = commerce_cart_order_id($user->uid);
    if (!empty($order_id)) {
      $path = BLUEOI_COMMERCE_SEND_BASE . '/' . $order_id;
      $block['content'] = l(t('Email cart'), $path);
    }
  }
  return $block;
}

/**
 * Access callback for sending carts.
 */
function blueoi_commerce_send_cart_send_access($order) {
  global $user;

  // Do not allow completed orders to be sent.
  if (!commerce_cart_order_is_cart($order)) {
    return FALSE;
  }

  // Only allow orders to be sent that belong to the current user.
  if ($order->uid != $user->uid) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Access callback for receiving carts.
 */
function blueoi_commerce_send_cart_receive_access($order) {
  // Do not allow completed orders to be sent.
  if (!commerce_cart_order_is_cart($order)) {
    return FALSE;
  }

  // Only allow orders that have actually been sent.
  if (empty($order->data['blueoi_commerce_send_cart']['sent'])) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Receive callback for receiving orders.
 */
function blueoi_commerce_send_cart_receive_callback($order) {
  global $user;

  // Overwrite the order owner.
  $order->uid = $user->uid;
  commerce_order_save($order);

  // Update the cart session.
  commerce_cart_order_session_save($order->order_id);
  $target_uri = commerce_checkout_order_uri($order);

  // Redirect the user to the appropriate location.
  if (!empty($target_uri)) {
    drupal_goto($target_uri);
  }

  drupal_goto('/cart');
}

/**
 * Form callback for sending a cart.
 */
function blueoi_commerce_send_cart_send_form($form, &$form_state, $order) {
  $form = array();

  $form_state['order_id'] = $order->order_id;

  $form['cart'] = array(
    '#type' => 'textfield',
    '#title' => t('Order Number'),
    '#disabled' => TRUE,
    '#default_value' => $order->order_id,
  );

  $form['to'] = array(
    '#type' => 'textfield',
    '#title' => t('To'),
    '#default_value' => !empty($form_state['values']['to']) ? $form_state['values']['to'] : '',
  );

  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#default_value' => !empty($form_state['values']['subject']) ? $form_state['values']['subject'] : '',
  );

  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#default_value' => !empty($form_state['values']['message']) ? $form_state['values']['message'] : '',
  );

  $form['actions'] = array(
    '#type' => 'container',
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
  );

  return $form;
}

/**
 * Validate handler for sending a cart.
 */
function blueoi_commerce_send_cart_send_form_validate($form, &$form_state) {
  if (!empty($form_state['values']['to']) && !valid_email_address($form_state['values']['to'])) {
    form_set_error('to', t('Please provide a valid email address'));
  }
}

/**
 * Submit handler for sending a cart.
 */
function blueoi_commerce_send_cart_send_form_submit($form, &$form_state) {
  $to = $form_state['values']['to'];
  $subject = $form_state['values']['subject'];
  $message = $form_state['values']['message'];
  $order = commerce_order_load($form_state['order_id']);
  $order->data['blueoi_commerce_send_cart']['sent'] = TRUE;
  commerce_order_save($order);
  rules_invoke_event('blueoi_commerce_send_cart_send', $to, $subject, $message, $order);
  drupal_goto();
}
